<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rider Profile</title>
    <link rel="stylesheet" href="/stylesheets/nav.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .profile-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .profile-header h1 {
            text-align: center;
        }

        .profile-picture {
            text-align: center;
            margin: 20px 0;
        }

        .rider-photo {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
        }

        .profile-details, .availability, .route-details {
            margin: 20px 0;
        }

        .profile-details h2, .availability h3, .route-details h3 {
            margin-bottom: 10px;
            text-align: center;
        }

        .pickup-drop-status {
            margin-top: 30px;
            background-color: #ffefef;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            background-color: #ffffff;
            margin: 10px 0;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .drop-pickup-type {
            font-weight: bold;
            color: #afa54c; 
        }

        .status-select {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 5px;
            margin-right: 10px;
            width: 100px;
        }

        .notes-input {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 5px;
            margin-right: 10px;
            width: 150px;
        }

        .update-button {
            padding: 5px 10px;
            background-color: #5cb85c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .update-button:hover {
            background-color: #4cae4c;
        }
    </style>
</head>
<body>
    <header>
        <div class="welcome-section">
            <h2>Welcome to eCareSathi</h2>
            <p>Your journey towards reliable rides starts here!</p> 
        </div>
        <nav>
            <a href="#about">About</a>
            <a href="#services">Services</a>
            <a href="#contact">Contact</a>
        </nav>
    </header>
    <div class="profile-container">
        <div class="profile-header">
            <h1>Rider Profile</h1>
        </div>
        
        <div class="profile-picture">
            <img src="/images/dummy-rider.jpg" alt="Rider's Photo" class="rider-photo">
        </div>

        <div class="profile-details">
            <h2 id="rider-name">John Smith</h2>
            <p><strong>Vehicle Type:</strong> <span id="vehicle-type">Sedan</span></p>
            <p><strong>License Plate:</strong> <span id="license-plate">XYZ 1234</span></p>
            <p><strong>Contact Number:</strong> <span id="contact-number">(123) 456-7890</span></p>
            <p><strong>Experience:</strong> <span id="experience">5 years</span></p>
        </div>

        <div class="availability">
            <h3>Rider Availability</h3>
            <p><strong>Available Days:</strong> <span id="available-days">Monday - Friday</span></p>
            <p><strong>Available Hours:</strong> <span id="available-hours">8:00 AM - 6:00 PM</span></p>
        </div>

        <div class="route-details">
            <h3>Route Details</h3>
            <p><strong>Primary Daycare:</strong> <span id="daycare-name">Little Stars Daycare</span></p>
            <p><strong>Drop-off Location:</strong> <span id="dropoff-location">123 Main St, Springfield</span></p>
            <p><strong>Return Home Location:</strong> <span id="return-location">456 Elm St, Springfield</span></p>
        </div>

        <div class="pickup-drop-status">
            <h3>Pickup and Drop Status</h3>
            <ul id="status-container">
                <li>
                    <span class="drop-pickup-type">Picking Up</span>
                    <span>Child: Emily</span>
                    <select class="status-select">
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                    </select>
                    <input type="text" class="notes-input" placeholder="Notes">
                    <button class="update-button" onclick="updateStatus('Emily', this)">Update</button>
                </li>
                <li>
                    <span class="drop-pickup-type">Dropping Off</span>
                    <span>Child: Liam</span>
                    <select class="status-select">
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                    </select>
                    <input type="text" class="notes-input" placeholder="Notes">
                    <button class="update-button" onclick="updateStatus('Liam', this)">Update</button>
                </li>
                <li>
                    <span class="drop-pickup-type">Picking Up</span>
                    <span>Child: Noah</span>
                    <select class="status-select">
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                    </select>
                    <input type="text" class="notes-input" placeholder="Notes">
                    <button class="update-button" onclick="updateStatus('Noah', this)">Update</button>
                </li>
            </ul>
        </div>
    </div>

    <script>
        const searchParams = new URLSearchParams(window.location.search);
let token = searchParams.get('token');

if (searchParams.has('token')) {
    window.localStorage.setItem('token', token);
} else {
    token = window.localStorage.getItem('token');
}

if (token) {
    // User is authorized
    getRiderData(token);
} else {
    // User isn't authorized
    console.log('User is not authorized');
}

async function getRiderData(token) {
    try {
        const response = await fetch('/rider/get-profile-data?token=' + token);
        const data = await response.json();

        // Ensure email is retrieved correctly
        const email = data.email; // Adjust according to the actual data structure

        // Set rider data in the DOM
        document.getElementById('rider-name').textContent = data.fullName;
        document.getElementById('vehicle-type').textContent = data.vehicleType;
        document.getElementById('license-plate').textContent = data.licensePlate;
        document.getElementById('contact-number').textContent = data.phone;

        fetchRiderSchedules(email);
        setInterval(() => fetchRiderSchedules(email), 5000); // Refresh schedules every 5 seconds
    } catch (err) {
        console.error('Error fetching rider data:', err);
    }
}


async function fetchRiderSchedules(email) {
    try {
        const response = await fetch('/rider/schedules?email=' + email);
        
        // Log the response for debugging
        const text = await response.text(); // Read response as text
        console.log(text); // Log the raw response

        const data = JSON.parse(text); // Try parsing as JSON
        console.log(data);
        
        const container = document.getElementById('schedule-container');
        container.innerHTML = ''; // Clear previous schedules

        data.forEach((schedule) => {
            const li = document.createElement('li');
            const label = document.createElement('span');
            const deadline = document.createElement('span');
            const status = document.createElement('span');

            label.classList.add('care-type');
            status.classList.add('care-status');

            if (schedule.status === 'completed') {
                status.classList.add('status-completed');
            }

            label.textContent = schedule.label; // e.g., "Picking Up: Child's Name"
            deadline.textContent = schedule.deadline; // e.g., "10:00 AM"
            status.textContent = schedule.status; // e.g., "Pending" or "Completed"

            li.appendChild(label);
            li.appendChild(deadline);
            li.appendChild(status);
            container.appendChild(li);
        });
    } catch (err) {
        console.error('Error fetching rider schedules:', err);
    }
}


    </script>
    
        
</body>
</html>
